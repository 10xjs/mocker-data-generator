{
    "name": "mocker-data-generator",
    "version": "2.6.1",
    "description": "A simplified way to generate mock data, builds using a simple schema and with the FakerJs",
    "main": "build/main/index.js",
    "typings": "build/main/index.d.ts",
    "module": "build/module/index.js",
    "repository": "https://github.com/danibram/mocker-data-generator",
    "keywords": [
        "mock",
        "data",
        "faker",
        "fakerjs",
        "chance",
        "chancejs",
        "casual",
        "randexp",
        "json",
        "fake",
        "mocks",
        "massive",
        "generator"
    ],
    "author": {
        "name": "Daniel Biedma Ramos",
        "email": "info@dbr.io",
        "url": "https://dbr.io"
    },
    "files": [
        "build/main/**/*",
        "build/module/**/*",
        "build/browser/**/*",
        "package.json",
        "README.md",
        "CHANGELOG.md",
        "LICENSE"
    ],
    "license": "MIT",
    "bugs": {
        "url": "https://github.com/danibram/mocker-data-generator/issues"
    },
    "scripts": {
        "info": "npm-scripts-info",
        "build": "node_modules/.bin/trash build && tsc -p tsconfig.json && node_modules/.bin/tsc -p config/tsconfig.module.json",
        "build:tests": "node_modules/.bin/trash test && node config/exports/build-tests.js",
        "lint": "node_modules/.bin/tslint src/**/*.ts",
        "unit": "npm run build && node_modules/.bin/nyc ava",
        "check-coverage": "node_modules/.bin/nyc check-coverage --lines 80 --functions 80 --branches 80",
        "test": "npm run unit && npm run check-coverage",
        "watch": "node_modules/.bin/trash build && node_modules/.bin/multiview [yarn watch:build] [yarn watch:unit]",
        "watch:build": "node_modules/.bin/tsc -p tsconfig.json -w",
        "watch:unit": "node_modules/.bin/tsc -p tsconfig.json && node_modules/.bin/ava --watch --verbose",
        "cov": "npm run unit && npm run html-coverage && node_modules/.bin/opn coverage/index.html",
        "html-coverage": "node_modules/.bin/nyc report --reporter=html",
        "send-coverage": "node_modules/.bin/nyc report --reporter=lcov > coverage.lcov && codecov",
        "docs": "node_modules/.bin/typedoc src/index.ts --excludePrivate --mode file --theme minimal --out build/docs && node_modules/.bin/opn build/docs/index.html",
        "docs:json": "node_modules/.bin/typedoc --mode file --json build/docs/typedoc.json src/index.ts",
        "release": "node_modules/.bin/standard-version",
        "release-github": "source .env.sh && conventional-github-releaser -p angular -r 1",
        "prett": "node_modules/.bin/prettier 'src/**/*.ts' --write",
        "docs:dev": "cd _docs_website && node_modules/.bin/next",
        "docs:serve:dev": "npm run run docs:build && npm run docs:start",
        "docs:build": "cd _docs_website && node_modules/.bin/next build",
        "docs:start": "cd _docs_website && node_modules/.bin/next start",
        "docs:examples": "node _docs_website/generateExamples.js",
        "docs:export:dev": "node_modules/.bin/trash _docs_website/.next && trash _docs_website/out && npm run docs:examples && cd _docs_website && NODE_ENV=development node_modules/.bin/next build && NODE_ENV=development node_modules/.bin/next export && npm run docs:serve:prod",
        "docs:export": "node_modules/.bin/trash _docs_website/.next && node_modules/.bin/trash _docs_website/out && npm run docs:examples && cd _docs_website && NODE_ENV=production node_modules/.bin/next build && node_modules/.bin/next export && touch out/.nojekyll",
        "docs:serve:prod": "node_modules/.bin/http-server _docs_website/out",
        "docs:deploy:gh-pages": "node_modules/.bin/gh-pages -d _docs_website/out -b gh-pages -t"
    },
    "scripts-info": {
        "info": "Display information about the scripts",
        "build": "(Trash and re)build the library",
        "lint": "Lint all typescript source files",
        "unit": "Run unit tests",
        "test": "Lint and test the library",
        "watch": "Watch source files, rebuild library on changes, rerun relevant tests",
        "watch:build": "Watch source files, rebuild library on changes",
        "watch:unit": "Watch the build, rerun relevant tests on changes",
        "cov": "Run tests, generate the HTML coverage report, and open it in a browser",
        "html-coverage": "Output HTML test coverage report",
        "send-coverage": "Output lcov test coverage report and send it to codecov",
        "docs": "Generate API documentation and open it in a browser",
        "docs:json": "Generate API documentation in typedoc JSON format",
        "release": "Bump package.json version, update CHANGELOG.md, tag a release"
    },
    "devDependencies": {
        "@types/chance": "^1.0.0",
        "@types/faker": "^4.1.2",
        "@types/node": "^10.0.4",
        "ava": "^0.25.0",
        "babel-preset-stage-0": "^6.24.1",
        "codecov": "^3.0.1",
        "conventional-github-releaser": "^2.0.2",
        "gh-pages": "^1.1.0",
        "http-server": "^0.11.0",
        "multiview": "^2.5.3",
        "npm-scripts-info": "^0.3.7",
        "nyc": "^11.7.1",
        "opn-cli": "^3.1.0",
        "prettier": "^1.12.1",
        "standard-version": "^4.3.0",
        "trash-cli": "^1.4.0",
<<<<<<< HEAD
        "ts-node": "^6.0.3",
        "tslint": "^5.10.0",
=======
        "ts-node": "^6.0.0",
        "tslint": "^5.9.1",
>>>>>>> greenkeeper/update-to-node-10
        "tslint-config-standard": "^7.0.0",
        "typedoc": "^0.11.1",
        "typescript": "^2.8.3"
    },
    "dependencies": {
        "casual-browserify": "^1.5.19",
        "chance": "^1.0.16",
        "faker": "^4.1.0",
        "randexp": "^0.4.9",
        "tslib": "^1.9.0"
    },
    "nyc": {
        "exclude": [
            "**/*.spec.js"
        ]
    },
    "ava": {
        "files": [
            "build/main/**/*.spec.js"
        ],
        "source": [
            "build/main/**/*"
        ]
    }
}
