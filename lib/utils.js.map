{"version":3,"sources":["../src/utils.js"],"names":[],"mappings":"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","file":"utils.js","sourcesContent":["import Faker from 'faker'\nimport Chance from 'chance'\n\nconst faker = Faker\nconst chance = new Chance()\n\nexport const isArray = function(arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n}\n\nexport const isObject = function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Object]';\n}\n\nexport const evalWithContextData =  function (key, object) {\n    // In this (way, we can pass object and use inside the eval string\n    return eval(key)\n}\n\nexport const fieldArrayCalcLength = function (config) {\n    let length\n    if (config.fixedLength) {\n        length = config.length\n    } else {\n        length = Math.floor((Math.random() * config.length) + 1)\n    }\n    return length\n}\n\n//General utils\n\nexport const stringToFn = function (moduleName, string, db, object) {\n\n    let re = /(^[a-zA-Z.]*)/   //aZ.aZ\n    let matches = re.exec(string)\n    let strFn\n    if (matches && matches.length === 2){\n        strFn = moduleName + '.' + string\n    }\n\n    re = /\\((.*?)\\)/ //Match ()\n    matches = re.exec(string)\n    if (!matches){\n        strFn = moduleName + '.' + string + '()'\n    }\n\n    return eval(strFn)\n}\n\nexport const iamLastParent = function(obj) {\n    let last = false\n    if (isObject(obj)) {\n        let ks = Object.keys(obj)\n\n        for (let i = 0; i < ks.length; i++) {\n            let k = ks[i]\n            last = iamLastChild(obj, k)\n            if (!last){\n                break\n            }\n        }\n    } else {\n        last = true\n    }\n    return last\n}\n\nexport const iamLastChild = function (parent, k) {\n    if (isArray(parent[k])) {\n        let last = false\n\n        if (parent[k].length === 0){\n            return true\n        }\n\n        for (let i = 0; i < parent[k].length; i++) {\n            let el = parent[k][i]\n            last = !isObject(el)\n            if (last){\n                break\n            }\n        }\n        return last\n    } else {\n        return !isObject(parent[k])\n    }\n}\n\nexport const isConditional = function (str) {\n    let arr = str.split(',')\n    return arr.length > 1\n}\n\nexport const cleanVirtuals = function (paths, object, options) {\n\n    //clean specific paths\n    let objectCleaner = function *(path, obj, options) {\n        let lvls = path.split(options.symbol)\n        let dest = obj\n\n        if (!lvls || lvls.length === 0) { return }\n        if (!obj) { return }\n\n        for (var i = 0; i< lvls.length; i++) {\n            let field = lvls[i]\n            if (i === lvls.length - 1 && dest[field]) {\n                if (Object.getOwnPropertyNames(dest[field]).length < 1) {\n                    delete dest[field]\n                    break\n                }\n            } else {\n                dest = dest[field]\n            }\n        }\n        lvls.pop()\n\n        if (lvls.length > 0){\n            yield *objectCleaner(lvls.join(options.symbol), obj, options)\n        } else {\n            return\n        }\n    }\n\n    let forEachPath = function *(path, object, options) {\n        let lvls = path.split(options.symbol)\n        let dest = object\n\n        for (var i = 0; i < lvls.length; i++) {\n            let field = lvls[i]\n            if (i === lvls.length - 1) {\n                // delete specific path\n                delete dest[field]\n                //clean specific path\n                yield *objectCleaner(path, object, options)\n            } else {\n                dest = dest[field]\n            }\n        }\n    }\n\n    let forPaths = function *(paths, object, options) {\n        for (var i = 0; i < paths.length; i++) {\n            let path = paths[i]\n            yield *forEachPath(path, object, options)\n        }\n    }\n\n    let it = forPaths(paths, object, options);\n    for (const res of it) { }\n\n    return object\n}\n\nexport const calculateKey = function(k){\n    if (!isConditional(k)){\n        return k\n    } else {\n        let key = k.split(',')\n        return key[0]\n    }\n}\n\nexport const conditionalField = function (acc, k, result, object){\n    if (!isConditional(k)){\n        acc[k] = result\n    } else {\n        let key = k.split(',')\n        if (evalWithContextData(key[0], object)){\n            acc[key[1]] = result\n        }\n    }\n    return\n}\n"]}