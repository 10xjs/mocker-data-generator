{"version":3,"sources":["../src/utils.js"],"names":[],"mappings":"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","file":"utils.js","sourcesContent":["import Faker from 'faker'\nimport Chance from 'chance'\nimport Casual from 'casual'\n\nconst casual = Casual\nconst faker = Faker\nconst chance = new Chance()\n\nexport const isArray = function(arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n}\n\nexport const isObject = function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Object]';\n}\n\nexport const evalWithContextData =  function (key, object, db) {\n    // In this (way, we can pass object and use inside the eval string\n    return eval(key)\n}\n\nexport const fnCallWithContext = function (fn, object, db) {\n    return fn.call({object, db, faker, chance, casual})\n}\n\nexport const fieldArrayCalcLength = function (config, fixedArrayLength) {\n    let length\n    if (config.fixedLength) {\n        length = config.length - fixedArrayLength\n    } else {\n        length = Math.floor((Math.random() * config.length) + 1)\n    }\n    return length\n}\n\nexport const stringToFn = function (moduleName, string, object, db) {\n\n    let re = /(^[a-zA-Z.]*)/   //aZ.aZ\n    let matches = re.exec(string)\n    let strFn\n    if (matches && matches.length === 2){\n        strFn = moduleName + '.' + string\n    }\n\n    re = /\\((.*?)\\)/ //Match ()\n    matches = re.exec(string)\n    if (!matches && ['casual', 'db', 'object'].indexOf(moduleName) < 0){\n        strFn = moduleName + '.' + string + '()'\n    }\n\n    return eval(strFn)\n}\n\nexport const iamLastParent = function(obj) {\n    let last = false\n    if (isObject(obj)) {\n        let ks = Object.keys(obj)\n\n        for (let i = 0; i < ks.length; i++) {\n            let k = ks[i]\n            last = iamLastChild(obj, k)\n            if (!last){\n                break\n            }\n        }\n    } else {\n        last = true\n    }\n    return last\n}\n\nexport const iamLastChild = function (parent, k) {\n    if (isArray(parent[k])) {\n        let last = false\n\n        if (parent[k].length === 0){\n            return true\n        }\n\n        for (let i = 0; i < parent[k].length; i++) {\n            let el = parent[k][i]\n            last = !isObject(el)\n            if (last){\n                break\n            }\n        }\n        return last\n    } else {\n        return !isObject(parent[k])\n    }\n}\n\nexport const isConditional = function (str) {\n    let arr = str.split(',')\n    return arr.length > 1\n}\n\nexport const cleanVirtuals = function (paths, object, options) {\n\n    //clean specific paths\n    let objectCleaner = function *(path, obj, options) {\n        let lvls = path.split(options.symbol)\n        let dest = obj\n\n        if (!lvls || lvls.length === 0) { return }\n        if (!obj) { return }\n\n        for (var i = 0; i< lvls.length; i++) {\n            let field = lvls[i]\n            if (i === lvls.length - 1 && dest[field]) {\n                if (Object.getOwnPropertyNames(dest[field]).length < 1) {\n                    delete dest[field]\n                    break\n                }\n            } else {\n                dest = dest[field]\n            }\n        }\n        lvls.pop()\n\n        if (lvls.length > 0){\n            yield *objectCleaner(lvls.join(options.symbol), obj, options)\n        } else {\n            return\n        }\n    }\n\n    let forEachPath = function *(path, object, options) {\n        let lvls = path.split(options.symbol)\n        let dest = object\n\n        for (var i = 0; i < lvls.length; i++) {\n            let field = lvls[i]\n            if (i === lvls.length - 1) {\n                // delete specific path\n                delete dest[field]\n                //clean specific path\n                yield *objectCleaner(path, object, options)\n            } else {\n                dest = dest[field]\n            }\n        }\n    }\n\n    let forPaths = function *(paths, object, options) {\n        for (var i = 0; i < paths.length; i++) {\n            let path = paths[i]\n            yield *forEachPath(path, object, options)\n        }\n    }\n\n    let it = forPaths(paths, object, options);\n    for (const res of it) { }\n\n    return object\n}\n\nexport const calculateKey = function(k){\n    if (!isConditional(k)){\n        return k\n    } else {\n        let key = k.split(',')\n        return key[0]\n    }\n}\n\nexport const conditionalField = function (acc, k, result, object){\n    if (!isConditional(k)){\n        acc[k] = result\n    } else {\n        let key = k.split(',')\n        if (evalWithContextData(key[0], object)){\n            acc[key[1]] = result\n        }\n    }\n    return\n}\n"]}